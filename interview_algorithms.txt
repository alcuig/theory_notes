INTERVIEWS

Small talk 
- previous experience
- not evaluated

Problem 
- Listen carefully (do not try to find solution) 
- Ask questions 
- Ask about' corner' cases

- Propose a test case
- Do not fall for trap of using solution from similar (but not identical) problem

*Problem solving - 22mins*

1. Brute force
- mention time & space complexity 

2. Better solution 
- mention time & space complexity 

3. Ask questions 
- ask if interviewer understood approach and agree
- if interviewer agreed, ask I can begin coding 

4. Coding 
- Comment out loud about what you're doing
- You should feel that you are on the same page as the interviewer

5. Debugging
- better to debug rather than interviewer


Part 2 Mock Interviews
Why 
- internal communication 
- code under pressure
- name variables an understandable way
- write modular code
- reason out loud 
- structure the answer
- learn to ask clarifying questions
- feedback

Interviewer
- propose hint 17 min 
- solution 23 min

Resources
- Leetcode

Prepare your workspace
- Google interviews use plain text doc 
- Disable autoformatting
- Use a monospace font 

Q&A
- If stuck, ask for hint, never give up 
- at beginning interview, ask how many questions to expect
- practice mock interviews
- interviewers do not tend to ask for writing pseudocode
- check on Glassdoor ahead how company does interview
